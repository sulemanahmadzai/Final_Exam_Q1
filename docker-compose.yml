version: "3.8"

services:
  mongodb:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - MONGO_URI=mongodb://mongodb:27017/auth-service
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=24h
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3001/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  blog-service:
    build:
      context: ./services/blog-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGO_URI=mongodb://mongodb:27017/blog-service
      - AUTH_SERVICE_URL=http://auth-service:3001
    depends_on:
      mongodb:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3002/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  comment-service:
    build:
      context: ./services/comment-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - MONGO_URI=mongodb://mongodb:27017/comment-service
      - AUTH_SERVICE_URL=http://auth-service:3001
      - BLOG_SERVICE_URL=http://blog-service:3002
    depends_on:
      mongodb:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      blog-service:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3003/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  profile-service:
    build:
      context: ./services/profile-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - MONGO_URI=mongodb://mongodb:27017/profile-service
      - AUTH_SERVICE_URL=http://auth-service:3001
    depends_on:
      mongodb:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3004/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - BLOG_SERVICE_URL=http://blog-service:3002
      - COMMENT_SERVICE_URL=http://comment-service:3003
      - PROFILE_SERVICE_URL=http://profile-service:3004
    depends_on:
      auth-service:
        condition: service_healthy
      blog-service:
        condition: service_healthy
      comment-service:
        condition: service_healthy
      profile-service:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
